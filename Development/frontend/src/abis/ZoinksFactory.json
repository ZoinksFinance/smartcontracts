{
  "contractName": "ZoinksFactory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeToSetter",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token0",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token1",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "pair",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "PairCreated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "INIT_CODE_PAIR_HASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allPairs",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "feeTo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "feeToSetter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "allPairsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        }
      ],
      "name": "createPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "pair",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeTo",
          "type": "address"
        }
      ],
      "name": "setFeeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeToSetter",
          "type": "address"
        }
      ],
      "name": "setFeeToSetter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"INIT_CODE_PAIR_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeTo\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/src/contracts/ZoinksFactory.sol\":\"ZoinksFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":0},\"remappings\":[]},\"sources\":{\"project:/src/contracts/ZoinksERC20.sol\":{\"keccak256\":\"0x8de1b6edef32ff33590f3a839b0c7445064917daf67fab51243ad3997dd8fa9c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://170667ebe4809e685bdc90f3e88512623d3d3c9f2fdbd9be334bc08c1c40429e\",\"dweb:/ipfs/QmV5Puym7ChMgy8wfU5f85xTLYXuNg6N6seqcxRTh851iW\"]},\"project:/src/contracts/ZoinksFactory.sol\":{\"keccak256\":\"0x47b429b55b012cc9b1d2f26cc23009671985871c8af1785227ce6b741a5f243e\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://0be31a16c153328a1791a136b8552e75e990f864b0f85fbaae76b84f9cca9164\",\"dweb:/ipfs/QmeY8aF9jTuiU3LwZvSLBWAAMvCr2NRSmUMQuVBcgmzU1U\"]},\"project:/src/contracts/ZoinksPair.sol\":{\"keccak256\":\"0x732dd97455e1b905ec5424131104ff9fc35c4b1bf35de5df30c1f144a9efe6ba\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://dac31f6937872a3bdc0192aaf75fcb19fce57357a45a9109bf6241df8990d847\",\"dweb:/ipfs/QmQpQ7VbgdV2d9MgHqzhbU8aJoQBpH6WrbQA3u1PFyaQbY\"]},\"project:/src/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xc7661266fa5abc5504157f4d9157b2b19374d68367dee28172d8e9315660d246\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f1ad4697ffcf8f861e9fda623fbce9ef36cb277b46a2b9beedaf4698c31b57fc\",\"dweb:/ipfs/QmWGEbX6ftaDEHjBboy6pQ2FU5X1FBRKvu4odghBBwPJiN\"]},\"project:/src/contracts/interfaces/IZoinksCallee.sol\":{\"keccak256\":\"0xfdb3aef64284fe92ce2471477f26ee4169ab3a8db76c28bb2ad9bd669958fd29\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a0030e9f89e468443cc2aaa9bebfaba05ea6b6d850b260f6327edf96b94422ab\",\"dweb:/ipfs/QmVYzgSiMJyGwRWqK3CVSGjWHvXdQ7MdPtMaHJX9PLgFjk\"]},\"project:/src/contracts/interfaces/IZoinksERC20.sol\":{\"keccak256\":\"0xb3f3a8a7b392ad9c30feaff861584ddc1d90e29de8f4e4d39939357af4f18a6b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://90034d9cf6b0cb3947864c68df0f5854b3b788967e3efbd0cd8726f17552c2cb\",\"dweb:/ipfs/QmXdxESsfhDaAaezgPxZqHCG1z6cFsTm8nD1HH6u9D2doA\"]},\"project:/src/contracts/interfaces/IZoinksFactory.sol\":{\"keccak256\":\"0xc411ef992b3b7ee0b0f33c32bf5d216afe3a21e5fe7d977f498b70cf473c4a58\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://49688a9e263ea3a0c0bb1ce4d668769d57dab67d343dec0aa6fc25c4d9ca728c\",\"dweb:/ipfs/QmQgmoCdGznQbUdXZoTrGwg3qEZrYu4Qrw5uNzeoVRC4eT\"]},\"project:/src/contracts/interfaces/IZoinksPair.sol\":{\"keccak256\":\"0x8aabd66c1ec346492f776ed5724a5ccee936e14b5197c0c6849a79cd05d5e341\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://243f363ba44fbd5c70cf8538424fb5f50119a30c7c319ae14aff1d47947d023e\",\"dweb:/ipfs/QmesgjEpWwdbqQHZQ3oiVsxvbA6ytTTWdhaF9de6mLcJGS\"]},\"project:/src/contracts/librarys/Math.sol\":{\"keccak256\":\"0xe9faf523cecc19b2c32870e947970d05524effe1ddd5b5f3fcee6676864a9441\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://2e26a007bc54c73254b96ac1879e8274b302352a1306857dbf352ddb6ed87ecd\",\"dweb:/ipfs/QmfW1uq2biXa5AbYyit8MBnBvbuBeHkN7KYTyphSL21uzi\"]},\"project:/src/contracts/librarys/SafeMath.sol\":{\"keccak256\":\"0x58c6579a8d76de550968ef8fe2edcc39b570fdc70637751bae352ba5a0c303e4\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a9d62de3d63a54a94082457ad72a660522c72f9cb943f994b1d94f48d24e31c9\",\"dweb:/ipfs/QmRAJDsc5tnKzFJ9vQeiaYoAu2Jakfqdo2i76zQqPHqM2k\"]},\"project:/src/contracts/librarys/UQ112x112.sol\":{\"keccak256\":\"0x5c633210b0b92da5ab617fd6b61ce6566f88e6e414aa5d68ba266332e190afdc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://9da668320d2bc20a0f11b27b836494ce1587d50bbabc0af5ffdb8d9d43d7d20d\",\"dweb:/ipfs/Qmb9BpXTfnHLvZY3SgmwQtfGoxXeKkoTWkCLB2fA2ULcPh\"]}},\"version\":1}",
  "bytecode": "0x6080604081905261001060a061009b565b601f1982820381018352601f90910116604081905261003291906020016100a8565b6040516020818303038152906040528051906020012060005534801561005757600080fd5b50604051614c36380380614c36833981016040819052610076916100e3565b600280546001600160a01b0319166001600160a01b0392909216919091179055610113565b61227f806129b783390190565b6000825160005b818110156100c957602081860181015185830152016100af565b818111156100d8576000828501525b509190910192915050565b6000602082840312156100f557600080fd5b81516001600160a01b038116811461010c57600080fd5b9392505050565b612895806101226000396000f3fe608060405234801561001057600080fd5b50600436106100835760003560e01c8063017e7e5814610088578063094b7415146100b85780631e3dd18b146100cb578063574f2ba3146100de5780635855a25a146100f0578063a2e74af6146100f9578063c9c653961461010e578063e6a4390514610121578063f46901ed14610155575b600080fd5b60015461009b906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b60025461009b906001600160a01b031681565b61009b6100d936600461052b565b610168565b6004545b6040519081526020016100af565b6100e260005481565b61010c610107366004610560565b610192565b005b61009b61011c366004610582565b6101e7565b61009b61012f366004610582565b60036020908152600092835260408084209091529082529020546001600160a01b031681565b61010c610163366004610560565b6104d2565b6004818154811061017857600080fd5b6000918252602090912001546001600160a01b0316905081565b6002546001600160a01b031633146101c55760405162461bcd60e51b81526004016101bc906105b5565b60405180910390fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6000816001600160a01b0316836001600160a01b0316036102485760405162461bcd60e51b815260206004820152601b60248201527a5a6f696e6b733a204944454e544943414c5f41444452455353455360281b60448201526064016101bc565b600080836001600160a01b0316856001600160a01b03161061026b57838561026e565b84845b90925090506001600160a01b0382166102c05760405162461bcd60e51b81526020600482015260146024820152735a6f696e6b733a205a45524f5f4144445245535360601b60448201526064016101bc565b6001600160a01b0382811660009081526003602090815260408083208585168452909152902054161561032b5760405162461bcd60e51b81526020600482015260136024820152725a6f696e6b733a20504149525f45584953545360681b60448201526064016101bc565b60006040518060200161033d9061051e565b601f1982820381018352601f9091011660408190526001600160601b0319606086811b8216602084015285901b166034820152909150600090604801604051602081830303815290604052805190602001209050808251602084016000f560405163485cc95560e01b81526001600160a01b03868116600483015285811660248301529196509086169063485cc95590604401600060405180830381600087803b1580156103ea57600080fd5b505af11580156103fe573d6000803e3d6000fd5b505050506001600160a01b0384811660008181526003602081815260408084208987168086529083528185208054978d166001600160a01b031998891681179091559383528185208686528352818520805488168517905560048054600181018255958190527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b9095018054909716841790965592548351928352908201527f0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9910160405180910390a35050505092915050565b6002546001600160a01b031633146104fc5760405162461bcd60e51b81526004016101bc906105b5565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b61227f806105e183390190565b60006020828403121561053d57600080fd5b5035919050565b80356001600160a01b038116811461055b57600080fd5b919050565b60006020828403121561057257600080fd5b61057b82610544565b9392505050565b6000806040838503121561059557600080fd5b61059e83610544565b91506105ac60208401610544565b90509250929050565b6020808252601190820152702d37b4b735b99d102327a92124a22222a760791b60408201526060019056fe60806040526001600c5534801561001557600080fd5b50604080518082018252600a8152695a6f696e6b73204c507360b01b6020918201528151808301835260018152603160f81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527f3bdad0196341395edd3289648844210204a15f0e48e79ccb23fc98579416b8fc818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a0808301919091528351808303909101815260c09091019092528151910120600355600580546001600160a01b03191633179055612177806101086000396000f3fe608060405234801561001057600080fd5b50600436106101495760003560e01c8063022c0d9f1461014e57806306fdde03146101635780630902f1ac146101a2578063095ea7b3146101d65780630dfe1681146101f957806318160ddd1461021957806323b872dd1461023057806330adf81f14610243578063313ce567146102585780633644e51514610272578063485cc9551461027b5780635909c0d51461028e5780635a3d5493146102975780636a627842146102a057806370a08231146102b35780637464fc3d146102d35780637ecebe00146102dc57806389afcb44146102fc57806395d89b4114610324578063a9059cbb1461034a578063ba9a7a561461035d578063bc25cf7714610366578063c45a015514610379578063d21220a71461038c578063d505accf1461039f578063dd62ed3e146103b2578063fff6cae9146103dd575b600080fd5b61016161015c366004611c9e565b6103e5565b005b61018c6040518060400160405280600a8152602001695a6f696e6b73204c507360b01b81525081565b6040516101999190611d63565b60405180910390f35b6101aa6108e0565b604080516001600160701b03948516815293909216602084015263ffffffff1690820152606001610199565b6101e96101e4366004611d96565b61090a565b6040519015158152602001610199565b60065461020c906001600160a01b031681565b6040516101999190611dc2565b61022260005481565b604051908152602001610199565b6101e961023e366004611dd6565b610921565b61022260008051602061212283398151915281565b610260601281565b60405160ff9091168152602001610199565b61022260035481565b610161610289366004611e17565b610988565b61022260095481565b610222600a5481565b6102226102ae366004611e50565b610a04565b6102226102c1366004611e50565b60016020526000908152604090205481565b610222600b5481565b6102226102ea366004611e50565b60046020526000908152604090205481565b61030f61030a366004611e50565b610cd3565b60408051928352602083019190915201610199565b61018c60405180604001604052806007815260200166043616b652d4c560cc1b81525081565b6101e9610358366004611d96565b611048565b6102226103e881565b610161610374366004611e50565b611055565b60055461020c906001600160a01b031681565b60075461020c906001600160a01b031681565b6101616103ad366004611e6d565b611173565b6102226103c0366004611e17565b600260209081526000928352604080842090915290825290205481565b61016161136e565b600c546001146104105760405162461bcd60e51b815260040161040790611ee4565b60405180910390fd5b6000600c55841515806104235750600084115b61047a5760405162461bcd60e51b815260206004820152602260248201527f5a6f696e6b733a20494e53554646494349454e545f4f55545055545f414d4f55604482015261139560f21b6064820152608401610407565b6000806104856108e0565b5091509150816001600160701b0316871080156104aa5750806001600160701b031686105b6104f65760405162461bcd60e51b815260206004820152601e60248201527f5a6f696e6b733a20494e53554646494349454e545f4c495155494449545900006044820152606401610407565b60065460075460009182916001600160a01b039182169190811690891682148015906105345750806001600160a01b0316896001600160a01b031614155b6105755760405162461bcd60e51b81526020600482015260126024820152715a6f696e6b733a20494e56414c49445f544f60701b6044820152606401610407565b8a1561058657610586828a8d61149c565b891561059757610597818a8c61149c565b861561060457604051631e1d061160e11b81526001600160a01b038a1690633c3a0c22906105d19033908f908f908e908e90600401611f0c565b600060405180830381600087803b1580156105eb57600080fd5b505af11580156105ff573d6000803e3d6000fd5b505050505b6040516370a0823160e01b81526001600160a01b038316906370a0823190610630903090600401611dc2565b602060405180830381865afa15801561064d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106719190611f58565b6040516370a0823160e01b81529094506001600160a01b038216906370a08231906106a0903090600401611dc2565b602060405180830381865afa1580156106bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e19190611f58565b92505050600089856001600160701b03166106fc9190611f87565b8311610709576000610726565b61071c8a6001600160701b038716611f87565b6107269084611f87565b9050600061073d8a6001600160701b038716611f87565b831161074a576000610767565b61075d8a6001600160701b038716611f87565b6107679084611f87565b905060008211806107785750600081115b6107ce5760405162461bcd60e51b815260206004820152602160248201527f5a6f696e6b733a20494e53554646494349454e545f494e5055545f414d4f554e6044820152601560fa1b6064820152608401610407565b60006107f06107de8460026115dd565b6107ea876103e86115dd565b90611666565b905060006108026107de8460026115dd565b9050610827620f42406108216001600160701b038b8116908b166115dd565b906115dd565b61083183836115dd565b101561086b5760405162461bcd60e51b81526020600482015260096024820152685a6f696e6b733a204b60b81b6044820152606401610407565b5050610879848488886116c2565b60408051838152602081018390529081018c9052606081018b90526001600160a01b038a169033907fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229060800160405180910390a350506001600c55505050505050505050565b6008546001600160701b0380821692600160701b830490911691600160e01b900463ffffffff1690565b600061091733848461184d565b5060015b92915050565b6001600160a01b038316600090815260026020908152604080832033845290915281205461094f9083611666565b6001600160a01b038516600090815260026020908152604080832033845290915290205561097e8484846118af565b5060019392505050565b6005546001600160a01b031633146109d65760405162461bcd60e51b81526020600482015260116024820152702d37b4b735b99d102327a92124a22222a760791b6044820152606401610407565b600680546001600160a01b039384166001600160a01b03199182161790915560078054929093169116179055565b6000600c54600114610a285760405162461bcd60e51b815260040161040790611ee4565b6000600c81905580610a386108e0565b506006546040516370a0823160e01b81529294509092506000916001600160a01b03909116906370a0823190610a72903090600401611dc2565b602060405180830381865afa158015610a8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab39190611f58565b6007546040516370a0823160e01b81529192506000916001600160a01b03909116906370a0823190610ae9903090600401611dc2565b602060405180830381865afa158015610b06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2a9190611f58565b90506000610b41836001600160701b038716611666565b90506000610b58836001600160701b038716611666565b90506000610b668787611943565b60008054919250819003610ba057610b8c6103e86107ea610b8787876115dd565b611a80565b9850610b9b60006103e8611af0565b610be7565b610be46001600160701b038916610bb786846115dd565b610bc19190611fb4565b6001600160701b038916610bd586856115dd565b610bdf9190611fb4565b611b6d565b98505b60008911610c455760405162461bcd60e51b815260206004820152602560248201527f5a6f696e6b733a20494e53554646494349454e545f4c49515549444954595f4d604482015264125395115160da1b6064820152608401610407565b610c4f8a8a611af0565b610c5b86868a8a6116c2565b8115610c8557600854610c81906001600160701b0380821691600160701b9004166115dd565b600b555b604080518581526020810185905233917f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f910160405180910390a250506001600c5550949695505050505050565b600080600c54600114610cf85760405162461bcd60e51b815260040161040790611ee4565b6000600c81905580610d086108e0565b506006546007546040516370a0823160e01b81529395509193506001600160a01b039081169291169060009083906370a0823190610d4a903090600401611dc2565b602060405180830381865afa158015610d67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8b9190611f58565b90506000826001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401610dbb9190611dc2565b602060405180830381865afa158015610dd8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dfc9190611f58565b30600090815260016020526040812054919250610e198888611943565b60005490915080610e2a84876115dd565b610e349190611fb4565b9a5080610e4184866115dd565b610e4b9190611fb4565b995060008b118015610e5d575060008a115b610eb75760405162461bcd60e51b815260206004820152602560248201527f5a6f696e6b733a20494e53554646494349454e545f4c49515549444954595f42604482015264155493915160da1b6064820152608401610407565b610ec13084611b83565b610ecc878d8d61149c565b610ed7868d8c61149c565b6040516370a0823160e01b81526001600160a01b038816906370a0823190610f03903090600401611dc2565b602060405180830381865afa158015610f20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f449190611f58565b6040516370a0823160e01b81529095506001600160a01b038716906370a0823190610f73903090600401611dc2565b602060405180830381865afa158015610f90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb49190611f58565b9350610fc285858b8b6116c2565b8115610fec57600854610fe8906001600160701b0380821691600160701b9004166115dd565b600b555b604080518c8152602081018c90526001600160a01b038e169133917fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496910160405180910390a35050505050505050506001600c81905550915091565b60006109173384846118af565b600c546001146110775760405162461bcd60e51b815260040161040790611ee4565b6000600c556006546007546008546040516370a0823160e01b81526001600160a01b0393841693909216916111169184918691611111916001600160701b039091169084906370a08231906110d0903090600401611dc2565b602060405180830381865afa1580156110ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ea9190611f58565b61149c565b61116981846111116008600e9054906101000a90046001600160701b03166001600160701b0316856001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016110d09190611dc2565b50506001600c5550565b428410156111b55760405162461bcd60e51b815260206004820152600f60248201526e169bda5b9adcce8811561412549151608a1b6044820152606401610407565b6003546001600160a01b03881660009081526004602052604081208054919291600080516020612122833981519152918b918b918b9190876111f683611fc8565b909155506040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810187905260e0016040516020818303038152906040528051906020012060405160200161126f92919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa1580156112da573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906113105750886001600160a01b0316816001600160a01b0316145b6113585760405162461bcd60e51b81526020600482015260196024820152785a6f696e6b733a20494e56414c49445f5349474e415455524560381b6044820152606401610407565b61136389898961184d565b505050505050505050565b600c546001146113905760405162461bcd60e51b815260040161040790611ee4565b6000600c556006546040516370a0823160e01b8152611495916001600160a01b0316906370a08231906113c7903090600401611dc2565b602060405180830381865afa1580156113e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114089190611f58565b6007546040516370a0823160e01b81526001600160a01b03909116906370a0823190611438903090600401611dc2565b602060405180830381865afa158015611455573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114799190611f58565b6008546001600160701b0380821691600160701b9004166116c2565b6001600c55565b60408051808201825260198152787472616e7366657228616464726573732c75696e743235362960381b60209182015281516001600160a01b0385811660248301526044808301869052845180840390910181526064909201845291810180516001600160e01b031663a9059cbb60e01b179052915160009283928716916115249190611fe1565b6000604051808303816000865af19150503d8060008114611561576040519150601f19603f3d011682016040523d82523d6000602084013e611566565b606091505b50915091508180156115905750805115806115905750808060200190518101906115909190611ffd565b6115d65760405162461bcd60e51b8152602060048201526017602482015276169bda5b9adcce881514905394d1915497d19052531151604a1b6044820152606401610407565b5050505050565b6000826000036115ef5750600061091b565b60006115fb838561201f565b9050826116088583611fb4565b1461165f5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b6064820152608401610407565b9392505050565b6000828211156116b85760405162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f7700006044820152606401610407565b61165f8284611f87565b60006116d2600160201b4261203e565b6008549091506000906116f290600160e01b900463ffffffff1683612052565b905060008163ffffffff1611801561171257506001600160701b03841615155b801561172657506001600160701b03831615155b156117b5578063ffffffff1661174e8561173f86611bfb565b6001600160e01b031690611c14565b6001600160e01b0316611761919061201f565b600960008282546117729190612077565b909155505063ffffffff811661178b8461173f87611bfb565b6001600160e01b031661179e919061201f565b600a60008282546117af9190612077565b90915550505b6008805463ffffffff8416600160e01b026001600160e01b036001600160701b03898116600160701b9081026001600160e01b03199095168c83161794909417918216831794859055604080519382169282169290921783529290930490911660208201527f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1910160405180910390a1505050505050565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166000908152600160205260409020546118d29082611666565b6001600160a01b0380851660009081526001602052604080822093909355908416815220546119019082611c29565b6001600160a01b038084166000818152600160205260409081902093909355915190851690600080516020612102833981519152906118a29085815260200190565b600080600560009054906101000a90046001600160a01b03166001600160a01b031663017e7e586040518163ffffffff1660e01b8152600401602060405180830381865afa158015611999573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119bd919061208f565b600b546001600160a01b038216158015945091925090611a6c578015611a675760006119f8610b876001600160701b038881169088166115dd565b90506000611a0583611a80565b905080821115611a64576000611a27611a1e8484611666565b600054906115dd565b90506000611a4083611a3a8660036115dd565b90611c29565b90506000611a4e8284611fb4565b90508015611a6057611a608782611af0565b5050505b50505b611a78565b8015611a78576000600b555b505092915050565b60006003821115611ae15750806000611a9a600283611fb4565b611aa5906001612077565b90505b81811015611adb57905080600281611ac08186611fb4565b611aca9190612077565b611ad49190611fb4565b9050611aa8565b50919050565b8115611aeb575060015b919050565b600054611afd9082611c29565b60009081556001600160a01b038316815260016020526040902054611b229082611c29565b6001600160a01b03831660008181526001602052604080822093909355915190919060008051602061210283398151915290611b619085815260200190565b60405180910390a35050565b6000818310611b7c578161165f565b5090919050565b6001600160a01b038216600090815260016020526040902054611ba69082611666565b6001600160a01b03831660009081526001602052604081209190915554611bcd9082611666565b60009081556040518281526001600160a01b0384169060008051602061210283398151915290602001611b61565b600061091b600160701b6001600160701b0384166120ac565b600061165f6001600160701b038316846120db565b600080611c368385612077565b90508381101561165f5760405162461bcd60e51b815260206004820152601b60248201527a536166654d6174683a206164646974696f6e206f766572666c6f7760281b6044820152606401610407565b6001600160a01b0381168114611c9b57600080fd5b50565b600080600080600060808688031215611cb657600080fd5b85359450602086013593506040860135611ccf81611c86565b925060608601356001600160401b0380821115611ceb57600080fd5b818801915088601f830112611cff57600080fd5b813581811115611d0e57600080fd5b896020828501011115611d2057600080fd5b9699959850939650602001949392505050565b60005b83811015611d4e578181015183820152602001611d36565b83811115611d5d576000848401525b50505050565b6020815260008251806020840152611d82816040850160208701611d33565b601f01601f19169190910160400192915050565b60008060408385031215611da957600080fd5b8235611db481611c86565b946020939093013593505050565b6001600160a01b0391909116815260200190565b600080600060608486031215611deb57600080fd5b8335611df681611c86565b92506020840135611e0681611c86565b929592945050506040919091013590565b60008060408385031215611e2a57600080fd5b8235611e3581611c86565b91506020830135611e4581611c86565b809150509250929050565b600060208284031215611e6257600080fd5b813561165f81611c86565b600080600080600080600060e0888a031215611e8857600080fd5b8735611e9381611c86565b96506020880135611ea381611c86565b95506040880135945060608801359350608088013560ff81168114611ec757600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6020808252600e908201526d169bda5b9adcce881313d0d2d15160921b604082015260600190565b60018060a01b038616815284602082015283604082015260806060820152816080820152818360a0830137600081830160a090810191909152601f909201601f19160101949350505050565b600060208284031215611f6a57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082821015611f9957611f99611f71565b500390565b634e487b7160e01b600052601260045260246000fd5b600082611fc357611fc3611f9e565b500490565b600060018201611fda57611fda611f71565b5060010190565b60008251611ff3818460208701611d33565b9190910192915050565b60006020828403121561200f57600080fd5b8151801515811461165f57600080fd5b600081600019048311821515161561203957612039611f71565b500290565b60008261204d5761204d611f9e565b500690565b600063ffffffff8381169083168181101561206f5761206f611f71565b039392505050565b6000821982111561208a5761208a611f71565b500190565b6000602082840312156120a157600080fd5b815161165f81611c86565b60006001600160e01b03828116848216811515828404821116156120d2576120d2611f71565b02949350505050565b60006001600160e01b03838116806120f5576120f5611f9e565b9216919091049291505056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9a2646970667358221220b60f080b60e4f7c06a5b9e4bdf8a481bbd99bb6ced66077334c86d27fc50349764736f6c634300080f0033a2646970667358221220be91cd2aa0c418971f4b7d722920e347a03418e6cb58d09e4d7da75cfd15ce9664736f6c634300080f003360806040526001600c5534801561001557600080fd5b50604080518082018252600a8152695a6f696e6b73204c507360b01b6020918201528151808301835260018152603160f81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527f3bdad0196341395edd3289648844210204a15f0e48e79ccb23fc98579416b8fc818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a0808301919091528351808303909101815260c09091019092528151910120600355600580546001600160a01b03191633179055612177806101086000396000f3fe608060405234801561001057600080fd5b50600436106101495760003560e01c8063022c0d9f1461014e57806306fdde03146101635780630902f1ac146101a2578063095ea7b3146101d65780630dfe1681146101f957806318160ddd1461021957806323b872dd1461023057806330adf81f14610243578063313ce567146102585780633644e51514610272578063485cc9551461027b5780635909c0d51461028e5780635a3d5493146102975780636a627842146102a057806370a08231146102b35780637464fc3d146102d35780637ecebe00146102dc57806389afcb44146102fc57806395d89b4114610324578063a9059cbb1461034a578063ba9a7a561461035d578063bc25cf7714610366578063c45a015514610379578063d21220a71461038c578063d505accf1461039f578063dd62ed3e146103b2578063fff6cae9146103dd575b600080fd5b61016161015c366004611c9e565b6103e5565b005b61018c6040518060400160405280600a8152602001695a6f696e6b73204c507360b01b81525081565b6040516101999190611d63565b60405180910390f35b6101aa6108e0565b604080516001600160701b03948516815293909216602084015263ffffffff1690820152606001610199565b6101e96101e4366004611d96565b61090a565b6040519015158152602001610199565b60065461020c906001600160a01b031681565b6040516101999190611dc2565b61022260005481565b604051908152602001610199565b6101e961023e366004611dd6565b610921565b61022260008051602061212283398151915281565b610260601281565b60405160ff9091168152602001610199565b61022260035481565b610161610289366004611e17565b610988565b61022260095481565b610222600a5481565b6102226102ae366004611e50565b610a04565b6102226102c1366004611e50565b60016020526000908152604090205481565b610222600b5481565b6102226102ea366004611e50565b60046020526000908152604090205481565b61030f61030a366004611e50565b610cd3565b60408051928352602083019190915201610199565b61018c60405180604001604052806007815260200166043616b652d4c560cc1b81525081565b6101e9610358366004611d96565b611048565b6102226103e881565b610161610374366004611e50565b611055565b60055461020c906001600160a01b031681565b60075461020c906001600160a01b031681565b6101616103ad366004611e6d565b611173565b6102226103c0366004611e17565b600260209081526000928352604080842090915290825290205481565b61016161136e565b600c546001146104105760405162461bcd60e51b815260040161040790611ee4565b60405180910390fd5b6000600c55841515806104235750600084115b61047a5760405162461bcd60e51b815260206004820152602260248201527f5a6f696e6b733a20494e53554646494349454e545f4f55545055545f414d4f55604482015261139560f21b6064820152608401610407565b6000806104856108e0565b5091509150816001600160701b0316871080156104aa5750806001600160701b031686105b6104f65760405162461bcd60e51b815260206004820152601e60248201527f5a6f696e6b733a20494e53554646494349454e545f4c495155494449545900006044820152606401610407565b60065460075460009182916001600160a01b039182169190811690891682148015906105345750806001600160a01b0316896001600160a01b031614155b6105755760405162461bcd60e51b81526020600482015260126024820152715a6f696e6b733a20494e56414c49445f544f60701b6044820152606401610407565b8a1561058657610586828a8d61149c565b891561059757610597818a8c61149c565b861561060457604051631e1d061160e11b81526001600160a01b038a1690633c3a0c22906105d19033908f908f908e908e90600401611f0c565b600060405180830381600087803b1580156105eb57600080fd5b505af11580156105ff573d6000803e3d6000fd5b505050505b6040516370a0823160e01b81526001600160a01b038316906370a0823190610630903090600401611dc2565b602060405180830381865afa15801561064d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106719190611f58565b6040516370a0823160e01b81529094506001600160a01b038216906370a08231906106a0903090600401611dc2565b602060405180830381865afa1580156106bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e19190611f58565b92505050600089856001600160701b03166106fc9190611f87565b8311610709576000610726565b61071c8a6001600160701b038716611f87565b6107269084611f87565b9050600061073d8a6001600160701b038716611f87565b831161074a576000610767565b61075d8a6001600160701b038716611f87565b6107679084611f87565b905060008211806107785750600081115b6107ce5760405162461bcd60e51b815260206004820152602160248201527f5a6f696e6b733a20494e53554646494349454e545f494e5055545f414d4f554e6044820152601560fa1b6064820152608401610407565b60006107f06107de8460026115dd565b6107ea876103e86115dd565b90611666565b905060006108026107de8460026115dd565b9050610827620f42406108216001600160701b038b8116908b166115dd565b906115dd565b61083183836115dd565b101561086b5760405162461bcd60e51b81526020600482015260096024820152685a6f696e6b733a204b60b81b6044820152606401610407565b5050610879848488886116c2565b60408051838152602081018390529081018c9052606081018b90526001600160a01b038a169033907fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229060800160405180910390a350506001600c55505050505050505050565b6008546001600160701b0380821692600160701b830490911691600160e01b900463ffffffff1690565b600061091733848461184d565b5060015b92915050565b6001600160a01b038316600090815260026020908152604080832033845290915281205461094f9083611666565b6001600160a01b038516600090815260026020908152604080832033845290915290205561097e8484846118af565b5060019392505050565b6005546001600160a01b031633146109d65760405162461bcd60e51b81526020600482015260116024820152702d37b4b735b99d102327a92124a22222a760791b6044820152606401610407565b600680546001600160a01b039384166001600160a01b03199182161790915560078054929093169116179055565b6000600c54600114610a285760405162461bcd60e51b815260040161040790611ee4565b6000600c81905580610a386108e0565b506006546040516370a0823160e01b81529294509092506000916001600160a01b03909116906370a0823190610a72903090600401611dc2565b602060405180830381865afa158015610a8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab39190611f58565b6007546040516370a0823160e01b81529192506000916001600160a01b03909116906370a0823190610ae9903090600401611dc2565b602060405180830381865afa158015610b06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2a9190611f58565b90506000610b41836001600160701b038716611666565b90506000610b58836001600160701b038716611666565b90506000610b668787611943565b60008054919250819003610ba057610b8c6103e86107ea610b8787876115dd565b611a80565b9850610b9b60006103e8611af0565b610be7565b610be46001600160701b038916610bb786846115dd565b610bc19190611fb4565b6001600160701b038916610bd586856115dd565b610bdf9190611fb4565b611b6d565b98505b60008911610c455760405162461bcd60e51b815260206004820152602560248201527f5a6f696e6b733a20494e53554646494349454e545f4c49515549444954595f4d604482015264125395115160da1b6064820152608401610407565b610c4f8a8a611af0565b610c5b86868a8a6116c2565b8115610c8557600854610c81906001600160701b0380821691600160701b9004166115dd565b600b555b604080518581526020810185905233917f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f910160405180910390a250506001600c5550949695505050505050565b600080600c54600114610cf85760405162461bcd60e51b815260040161040790611ee4565b6000600c81905580610d086108e0565b506006546007546040516370a0823160e01b81529395509193506001600160a01b039081169291169060009083906370a0823190610d4a903090600401611dc2565b602060405180830381865afa158015610d67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8b9190611f58565b90506000826001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401610dbb9190611dc2565b602060405180830381865afa158015610dd8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dfc9190611f58565b30600090815260016020526040812054919250610e198888611943565b60005490915080610e2a84876115dd565b610e349190611fb4565b9a5080610e4184866115dd565b610e4b9190611fb4565b995060008b118015610e5d575060008a115b610eb75760405162461bcd60e51b815260206004820152602560248201527f5a6f696e6b733a20494e53554646494349454e545f4c49515549444954595f42604482015264155493915160da1b6064820152608401610407565b610ec13084611b83565b610ecc878d8d61149c565b610ed7868d8c61149c565b6040516370a0823160e01b81526001600160a01b038816906370a0823190610f03903090600401611dc2565b602060405180830381865afa158015610f20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f449190611f58565b6040516370a0823160e01b81529095506001600160a01b038716906370a0823190610f73903090600401611dc2565b602060405180830381865afa158015610f90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb49190611f58565b9350610fc285858b8b6116c2565b8115610fec57600854610fe8906001600160701b0380821691600160701b9004166115dd565b600b555b604080518c8152602081018c90526001600160a01b038e169133917fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496910160405180910390a35050505050505050506001600c81905550915091565b60006109173384846118af565b600c546001146110775760405162461bcd60e51b815260040161040790611ee4565b6000600c556006546007546008546040516370a0823160e01b81526001600160a01b0393841693909216916111169184918691611111916001600160701b039091169084906370a08231906110d0903090600401611dc2565b602060405180830381865afa1580156110ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ea9190611f58565b61149c565b61116981846111116008600e9054906101000a90046001600160701b03166001600160701b0316856001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016110d09190611dc2565b50506001600c5550565b428410156111b55760405162461bcd60e51b815260206004820152600f60248201526e169bda5b9adcce8811561412549151608a1b6044820152606401610407565b6003546001600160a01b03881660009081526004602052604081208054919291600080516020612122833981519152918b918b918b9190876111f683611fc8565b909155506040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810187905260e0016040516020818303038152906040528051906020012060405160200161126f92919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa1580156112da573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906113105750886001600160a01b0316816001600160a01b0316145b6113585760405162461bcd60e51b81526020600482015260196024820152785a6f696e6b733a20494e56414c49445f5349474e415455524560381b6044820152606401610407565b61136389898961184d565b505050505050505050565b600c546001146113905760405162461bcd60e51b815260040161040790611ee4565b6000600c556006546040516370a0823160e01b8152611495916001600160a01b0316906370a08231906113c7903090600401611dc2565b602060405180830381865afa1580156113e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114089190611f58565b6007546040516370a0823160e01b81526001600160a01b03909116906370a0823190611438903090600401611dc2565b602060405180830381865afa158015611455573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114799190611f58565b6008546001600160701b0380821691600160701b9004166116c2565b6001600c55565b60408051808201825260198152787472616e7366657228616464726573732c75696e743235362960381b60209182015281516001600160a01b0385811660248301526044808301869052845180840390910181526064909201845291810180516001600160e01b031663a9059cbb60e01b179052915160009283928716916115249190611fe1565b6000604051808303816000865af19150503d8060008114611561576040519150601f19603f3d011682016040523d82523d6000602084013e611566565b606091505b50915091508180156115905750805115806115905750808060200190518101906115909190611ffd565b6115d65760405162461bcd60e51b8152602060048201526017602482015276169bda5b9adcce881514905394d1915497d19052531151604a1b6044820152606401610407565b5050505050565b6000826000036115ef5750600061091b565b60006115fb838561201f565b9050826116088583611fb4565b1461165f5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b6064820152608401610407565b9392505050565b6000828211156116b85760405162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f7700006044820152606401610407565b61165f8284611f87565b60006116d2600160201b4261203e565b6008549091506000906116f290600160e01b900463ffffffff1683612052565b905060008163ffffffff1611801561171257506001600160701b03841615155b801561172657506001600160701b03831615155b156117b5578063ffffffff1661174e8561173f86611bfb565b6001600160e01b031690611c14565b6001600160e01b0316611761919061201f565b600960008282546117729190612077565b909155505063ffffffff811661178b8461173f87611bfb565b6001600160e01b031661179e919061201f565b600a60008282546117af9190612077565b90915550505b6008805463ffffffff8416600160e01b026001600160e01b036001600160701b03898116600160701b9081026001600160e01b03199095168c83161794909417918216831794859055604080519382169282169290921783529290930490911660208201527f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1910160405180910390a1505050505050565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166000908152600160205260409020546118d29082611666565b6001600160a01b0380851660009081526001602052604080822093909355908416815220546119019082611c29565b6001600160a01b038084166000818152600160205260409081902093909355915190851690600080516020612102833981519152906118a29085815260200190565b600080600560009054906101000a90046001600160a01b03166001600160a01b031663017e7e586040518163ffffffff1660e01b8152600401602060405180830381865afa158015611999573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119bd919061208f565b600b546001600160a01b038216158015945091925090611a6c578015611a675760006119f8610b876001600160701b038881169088166115dd565b90506000611a0583611a80565b905080821115611a64576000611a27611a1e8484611666565b600054906115dd565b90506000611a4083611a3a8660036115dd565b90611c29565b90506000611a4e8284611fb4565b90508015611a6057611a608782611af0565b5050505b50505b611a78565b8015611a78576000600b555b505092915050565b60006003821115611ae15750806000611a9a600283611fb4565b611aa5906001612077565b90505b81811015611adb57905080600281611ac08186611fb4565b611aca9190612077565b611ad49190611fb4565b9050611aa8565b50919050565b8115611aeb575060015b919050565b600054611afd9082611c29565b60009081556001600160a01b038316815260016020526040902054611b229082611c29565b6001600160a01b03831660008181526001602052604080822093909355915190919060008051602061210283398151915290611b619085815260200190565b60405180910390a35050565b6000818310611b7c578161165f565b5090919050565b6001600160a01b038216600090815260016020526040902054611ba69082611666565b6001600160a01b03831660009081526001602052604081209190915554611bcd9082611666565b60009081556040518281526001600160a01b0384169060008051602061210283398151915290602001611b61565b600061091b600160701b6001600160701b0384166120ac565b600061165f6001600160701b038316846120db565b600080611c368385612077565b90508381101561165f5760405162461bcd60e51b815260206004820152601b60248201527a536166654d6174683a206164646974696f6e206f766572666c6f7760281b6044820152606401610407565b6001600160a01b0381168114611c9b57600080fd5b50565b600080600080600060808688031215611cb657600080fd5b85359450602086013593506040860135611ccf81611c86565b925060608601356001600160401b0380821115611ceb57600080fd5b818801915088601f830112611cff57600080fd5b813581811115611d0e57600080fd5b896020828501011115611d2057600080fd5b9699959850939650602001949392505050565b60005b83811015611d4e578181015183820152602001611d36565b83811115611d5d576000848401525b50505050565b6020815260008251806020840152611d82816040850160208701611d33565b601f01601f19169190910160400192915050565b60008060408385031215611da957600080fd5b8235611db481611c86565b946020939093013593505050565b6001600160a01b0391909116815260200190565b600080600060608486031215611deb57600080fd5b8335611df681611c86565b92506020840135611e0681611c86565b929592945050506040919091013590565b60008060408385031215611e2a57600080fd5b8235611e3581611c86565b91506020830135611e4581611c86565b809150509250929050565b600060208284031215611e6257600080fd5b813561165f81611c86565b600080600080600080600060e0888a031215611e8857600080fd5b8735611e9381611c86565b96506020880135611ea381611c86565b95506040880135945060608801359350608088013560ff81168114611ec757600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6020808252600e908201526d169bda5b9adcce881313d0d2d15160921b604082015260600190565b60018060a01b038616815284602082015283604082015260806060820152816080820152818360a0830137600081830160a090810191909152601f909201601f19160101949350505050565b600060208284031215611f6a57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082821015611f9957611f99611f71565b500390565b634e487b7160e01b600052601260045260246000fd5b600082611fc357611fc3611f9e565b500490565b600060018201611fda57611fda611f71565b5060010190565b60008251611ff3818460208701611d33565b9190910192915050565b60006020828403121561200f57600080fd5b8151801515811461165f57600080fd5b600081600019048311821515161561203957612039611f71565b500290565b60008261204d5761204d611f9e565b500690565b600063ffffffff8381169083168181101561206f5761206f611f71565b039392505050565b6000821982111561208a5761208a611f71565b500190565b6000602082840312156120a157600080fd5b815161165f81611c86565b60006001600160e01b03828116848216811515828404821116156120d2576120d2611f71565b02949350505050565b60006001600160e01b03838116806120f5576120f5611f9e565b9216919091049291505056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9a2646970667358221220b60f080b60e4f7c06a5b9e4bdf8a481bbd99bb6ced66077334c86d27fc50349764736f6c634300080f0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100835760003560e01c8063017e7e5814610088578063094b7415146100b85780631e3dd18b146100cb578063574f2ba3146100de5780635855a25a146100f0578063a2e74af6146100f9578063c9c653961461010e578063e6a4390514610121578063f46901ed14610155575b600080fd5b60015461009b906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b60025461009b906001600160a01b031681565b61009b6100d936600461052b565b610168565b6004545b6040519081526020016100af565b6100e260005481565b61010c610107366004610560565b610192565b005b61009b61011c366004610582565b6101e7565b61009b61012f366004610582565b60036020908152600092835260408084209091529082529020546001600160a01b031681565b61010c610163366004610560565b6104d2565b6004818154811061017857600080fd5b6000918252602090912001546001600160a01b0316905081565b6002546001600160a01b031633146101c55760405162461bcd60e51b81526004016101bc906105b5565b60405180910390fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6000816001600160a01b0316836001600160a01b0316036102485760405162461bcd60e51b815260206004820152601b60248201527a5a6f696e6b733a204944454e544943414c5f41444452455353455360281b60448201526064016101bc565b600080836001600160a01b0316856001600160a01b03161061026b57838561026e565b84845b90925090506001600160a01b0382166102c05760405162461bcd60e51b81526020600482015260146024820152735a6f696e6b733a205a45524f5f4144445245535360601b60448201526064016101bc565b6001600160a01b0382811660009081526003602090815260408083208585168452909152902054161561032b5760405162461bcd60e51b81526020600482015260136024820152725a6f696e6b733a20504149525f45584953545360681b60448201526064016101bc565b60006040518060200161033d9061051e565b601f1982820381018352601f9091011660408190526001600160601b0319606086811b8216602084015285901b166034820152909150600090604801604051602081830303815290604052805190602001209050808251602084016000f560405163485cc95560e01b81526001600160a01b03868116600483015285811660248301529196509086169063485cc95590604401600060405180830381600087803b1580156103ea57600080fd5b505af11580156103fe573d6000803e3d6000fd5b505050506001600160a01b0384811660008181526003602081815260408084208987168086529083528185208054978d166001600160a01b031998891681179091559383528185208686528352818520805488168517905560048054600181018255958190527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b9095018054909716841790965592548351928352908201527f0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9910160405180910390a35050505092915050565b6002546001600160a01b031633146104fc5760405162461bcd60e51b81526004016101bc906105b5565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b61227f806105e183390190565b60006020828403121561053d57600080fd5b5035919050565b80356001600160a01b038116811461055b57600080fd5b919050565b60006020828403121561057257600080fd5b61057b82610544565b9392505050565b6000806040838503121561059557600080fd5b61059e83610544565b91506105ac60208401610544565b90509250929050565b6020808252601190820152702d37b4b735b99d102327a92124a22222a760791b60408201526060019056fe60806040526001600c5534801561001557600080fd5b50604080518082018252600a8152695a6f696e6b73204c507360b01b6020918201528151808301835260018152603160f81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527f3bdad0196341395edd3289648844210204a15f0e48e79ccb23fc98579416b8fc818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a0808301919091528351808303909101815260c09091019092528151910120600355600580546001600160a01b03191633179055612177806101086000396000f3fe608060405234801561001057600080fd5b50600436106101495760003560e01c8063022c0d9f1461014e57806306fdde03146101635780630902f1ac146101a2578063095ea7b3146101d65780630dfe1681146101f957806318160ddd1461021957806323b872dd1461023057806330adf81f14610243578063313ce567146102585780633644e51514610272578063485cc9551461027b5780635909c0d51461028e5780635a3d5493146102975780636a627842146102a057806370a08231146102b35780637464fc3d146102d35780637ecebe00146102dc57806389afcb44146102fc57806395d89b4114610324578063a9059cbb1461034a578063ba9a7a561461035d578063bc25cf7714610366578063c45a015514610379578063d21220a71461038c578063d505accf1461039f578063dd62ed3e146103b2578063fff6cae9146103dd575b600080fd5b61016161015c366004611c9e565b6103e5565b005b61018c6040518060400160405280600a8152602001695a6f696e6b73204c507360b01b81525081565b6040516101999190611d63565b60405180910390f35b6101aa6108e0565b604080516001600160701b03948516815293909216602084015263ffffffff1690820152606001610199565b6101e96101e4366004611d96565b61090a565b6040519015158152602001610199565b60065461020c906001600160a01b031681565b6040516101999190611dc2565b61022260005481565b604051908152602001610199565b6101e961023e366004611dd6565b610921565b61022260008051602061212283398151915281565b610260601281565b60405160ff9091168152602001610199565b61022260035481565b610161610289366004611e17565b610988565b61022260095481565b610222600a5481565b6102226102ae366004611e50565b610a04565b6102226102c1366004611e50565b60016020526000908152604090205481565b610222600b5481565b6102226102ea366004611e50565b60046020526000908152604090205481565b61030f61030a366004611e50565b610cd3565b60408051928352602083019190915201610199565b61018c60405180604001604052806007815260200166043616b652d4c560cc1b81525081565b6101e9610358366004611d96565b611048565b6102226103e881565b610161610374366004611e50565b611055565b60055461020c906001600160a01b031681565b60075461020c906001600160a01b031681565b6101616103ad366004611e6d565b611173565b6102226103c0366004611e17565b600260209081526000928352604080842090915290825290205481565b61016161136e565b600c546001146104105760405162461bcd60e51b815260040161040790611ee4565b60405180910390fd5b6000600c55841515806104235750600084115b61047a5760405162461bcd60e51b815260206004820152602260248201527f5a6f696e6b733a20494e53554646494349454e545f4f55545055545f414d4f55604482015261139560f21b6064820152608401610407565b6000806104856108e0565b5091509150816001600160701b0316871080156104aa5750806001600160701b031686105b6104f65760405162461bcd60e51b815260206004820152601e60248201527f5a6f696e6b733a20494e53554646494349454e545f4c495155494449545900006044820152606401610407565b60065460075460009182916001600160a01b039182169190811690891682148015906105345750806001600160a01b0316896001600160a01b031614155b6105755760405162461bcd60e51b81526020600482015260126024820152715a6f696e6b733a20494e56414c49445f544f60701b6044820152606401610407565b8a1561058657610586828a8d61149c565b891561059757610597818a8c61149c565b861561060457604051631e1d061160e11b81526001600160a01b038a1690633c3a0c22906105d19033908f908f908e908e90600401611f0c565b600060405180830381600087803b1580156105eb57600080fd5b505af11580156105ff573d6000803e3d6000fd5b505050505b6040516370a0823160e01b81526001600160a01b038316906370a0823190610630903090600401611dc2565b602060405180830381865afa15801561064d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106719190611f58565b6040516370a0823160e01b81529094506001600160a01b038216906370a08231906106a0903090600401611dc2565b602060405180830381865afa1580156106bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e19190611f58565b92505050600089856001600160701b03166106fc9190611f87565b8311610709576000610726565b61071c8a6001600160701b038716611f87565b6107269084611f87565b9050600061073d8a6001600160701b038716611f87565b831161074a576000610767565b61075d8a6001600160701b038716611f87565b6107679084611f87565b905060008211806107785750600081115b6107ce5760405162461bcd60e51b815260206004820152602160248201527f5a6f696e6b733a20494e53554646494349454e545f494e5055545f414d4f554e6044820152601560fa1b6064820152608401610407565b60006107f06107de8460026115dd565b6107ea876103e86115dd565b90611666565b905060006108026107de8460026115dd565b9050610827620f42406108216001600160701b038b8116908b166115dd565b906115dd565b61083183836115dd565b101561086b5760405162461bcd60e51b81526020600482015260096024820152685a6f696e6b733a204b60b81b6044820152606401610407565b5050610879848488886116c2565b60408051838152602081018390529081018c9052606081018b90526001600160a01b038a169033907fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229060800160405180910390a350506001600c55505050505050505050565b6008546001600160701b0380821692600160701b830490911691600160e01b900463ffffffff1690565b600061091733848461184d565b5060015b92915050565b6001600160a01b038316600090815260026020908152604080832033845290915281205461094f9083611666565b6001600160a01b038516600090815260026020908152604080832033845290915290205561097e8484846118af565b5060019392505050565b6005546001600160a01b031633146109d65760405162461bcd60e51b81526020600482015260116024820152702d37b4b735b99d102327a92124a22222a760791b6044820152606401610407565b600680546001600160a01b039384166001600160a01b03199182161790915560078054929093169116179055565b6000600c54600114610a285760405162461bcd60e51b815260040161040790611ee4565b6000600c81905580610a386108e0565b506006546040516370a0823160e01b81529294509092506000916001600160a01b03909116906370a0823190610a72903090600401611dc2565b602060405180830381865afa158015610a8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab39190611f58565b6007546040516370a0823160e01b81529192506000916001600160a01b03909116906370a0823190610ae9903090600401611dc2565b602060405180830381865afa158015610b06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2a9190611f58565b90506000610b41836001600160701b038716611666565b90506000610b58836001600160701b038716611666565b90506000610b668787611943565b60008054919250819003610ba057610b8c6103e86107ea610b8787876115dd565b611a80565b9850610b9b60006103e8611af0565b610be7565b610be46001600160701b038916610bb786846115dd565b610bc19190611fb4565b6001600160701b038916610bd586856115dd565b610bdf9190611fb4565b611b6d565b98505b60008911610c455760405162461bcd60e51b815260206004820152602560248201527f5a6f696e6b733a20494e53554646494349454e545f4c49515549444954595f4d604482015264125395115160da1b6064820152608401610407565b610c4f8a8a611af0565b610c5b86868a8a6116c2565b8115610c8557600854610c81906001600160701b0380821691600160701b9004166115dd565b600b555b604080518581526020810185905233917f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f910160405180910390a250506001600c5550949695505050505050565b600080600c54600114610cf85760405162461bcd60e51b815260040161040790611ee4565b6000600c81905580610d086108e0565b506006546007546040516370a0823160e01b81529395509193506001600160a01b039081169291169060009083906370a0823190610d4a903090600401611dc2565b602060405180830381865afa158015610d67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8b9190611f58565b90506000826001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401610dbb9190611dc2565b602060405180830381865afa158015610dd8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dfc9190611f58565b30600090815260016020526040812054919250610e198888611943565b60005490915080610e2a84876115dd565b610e349190611fb4565b9a5080610e4184866115dd565b610e4b9190611fb4565b995060008b118015610e5d575060008a115b610eb75760405162461bcd60e51b815260206004820152602560248201527f5a6f696e6b733a20494e53554646494349454e545f4c49515549444954595f42604482015264155493915160da1b6064820152608401610407565b610ec13084611b83565b610ecc878d8d61149c565b610ed7868d8c61149c565b6040516370a0823160e01b81526001600160a01b038816906370a0823190610f03903090600401611dc2565b602060405180830381865afa158015610f20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f449190611f58565b6040516370a0823160e01b81529095506001600160a01b038716906370a0823190610f73903090600401611dc2565b602060405180830381865afa158015610f90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb49190611f58565b9350610fc285858b8b6116c2565b8115610fec57600854610fe8906001600160701b0380821691600160701b9004166115dd565b600b555b604080518c8152602081018c90526001600160a01b038e169133917fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496910160405180910390a35050505050505050506001600c81905550915091565b60006109173384846118af565b600c546001146110775760405162461bcd60e51b815260040161040790611ee4565b6000600c556006546007546008546040516370a0823160e01b81526001600160a01b0393841693909216916111169184918691611111916001600160701b039091169084906370a08231906110d0903090600401611dc2565b602060405180830381865afa1580156110ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ea9190611f58565b61149c565b61116981846111116008600e9054906101000a90046001600160701b03166001600160701b0316856001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016110d09190611dc2565b50506001600c5550565b428410156111b55760405162461bcd60e51b815260206004820152600f60248201526e169bda5b9adcce8811561412549151608a1b6044820152606401610407565b6003546001600160a01b03881660009081526004602052604081208054919291600080516020612122833981519152918b918b918b9190876111f683611fc8565b909155506040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810187905260e0016040516020818303038152906040528051906020012060405160200161126f92919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa1580156112da573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906113105750886001600160a01b0316816001600160a01b0316145b6113585760405162461bcd60e51b81526020600482015260196024820152785a6f696e6b733a20494e56414c49445f5349474e415455524560381b6044820152606401610407565b61136389898961184d565b505050505050505050565b600c546001146113905760405162461bcd60e51b815260040161040790611ee4565b6000600c556006546040516370a0823160e01b8152611495916001600160a01b0316906370a08231906113c7903090600401611dc2565b602060405180830381865afa1580156113e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114089190611f58565b6007546040516370a0823160e01b81526001600160a01b03909116906370a0823190611438903090600401611dc2565b602060405180830381865afa158015611455573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114799190611f58565b6008546001600160701b0380821691600160701b9004166116c2565b6001600c55565b60408051808201825260198152787472616e7366657228616464726573732c75696e743235362960381b60209182015281516001600160a01b0385811660248301526044808301869052845180840390910181526064909201845291810180516001600160e01b031663a9059cbb60e01b179052915160009283928716916115249190611fe1565b6000604051808303816000865af19150503d8060008114611561576040519150601f19603f3d011682016040523d82523d6000602084013e611566565b606091505b50915091508180156115905750805115806115905750808060200190518101906115909190611ffd565b6115d65760405162461bcd60e51b8152602060048201526017602482015276169bda5b9adcce881514905394d1915497d19052531151604a1b6044820152606401610407565b5050505050565b6000826000036115ef5750600061091b565b60006115fb838561201f565b9050826116088583611fb4565b1461165f5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b6064820152608401610407565b9392505050565b6000828211156116b85760405162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f7700006044820152606401610407565b61165f8284611f87565b60006116d2600160201b4261203e565b6008549091506000906116f290600160e01b900463ffffffff1683612052565b905060008163ffffffff1611801561171257506001600160701b03841615155b801561172657506001600160701b03831615155b156117b5578063ffffffff1661174e8561173f86611bfb565b6001600160e01b031690611c14565b6001600160e01b0316611761919061201f565b600960008282546117729190612077565b909155505063ffffffff811661178b8461173f87611bfb565b6001600160e01b031661179e919061201f565b600a60008282546117af9190612077565b90915550505b6008805463ffffffff8416600160e01b026001600160e01b036001600160701b03898116600160701b9081026001600160e01b03199095168c83161794909417918216831794859055604080519382169282169290921783529290930490911660208201527f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1910160405180910390a1505050505050565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166000908152600160205260409020546118d29082611666565b6001600160a01b0380851660009081526001602052604080822093909355908416815220546119019082611c29565b6001600160a01b038084166000818152600160205260409081902093909355915190851690600080516020612102833981519152906118a29085815260200190565b600080600560009054906101000a90046001600160a01b03166001600160a01b031663017e7e586040518163ffffffff1660e01b8152600401602060405180830381865afa158015611999573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119bd919061208f565b600b546001600160a01b038216158015945091925090611a6c578015611a675760006119f8610b876001600160701b038881169088166115dd565b90506000611a0583611a80565b905080821115611a64576000611a27611a1e8484611666565b600054906115dd565b90506000611a4083611a3a8660036115dd565b90611c29565b90506000611a4e8284611fb4565b90508015611a6057611a608782611af0565b5050505b50505b611a78565b8015611a78576000600b555b505092915050565b60006003821115611ae15750806000611a9a600283611fb4565b611aa5906001612077565b90505b81811015611adb57905080600281611ac08186611fb4565b611aca9190612077565b611ad49190611fb4565b9050611aa8565b50919050565b8115611aeb575060015b919050565b600054611afd9082611c29565b60009081556001600160a01b038316815260016020526040902054611b229082611c29565b6001600160a01b03831660008181526001602052604080822093909355915190919060008051602061210283398151915290611b619085815260200190565b60405180910390a35050565b6000818310611b7c578161165f565b5090919050565b6001600160a01b038216600090815260016020526040902054611ba69082611666565b6001600160a01b03831660009081526001602052604081209190915554611bcd9082611666565b60009081556040518281526001600160a01b0384169060008051602061210283398151915290602001611b61565b600061091b600160701b6001600160701b0384166120ac565b600061165f6001600160701b038316846120db565b600080611c368385612077565b90508381101561165f5760405162461bcd60e51b815260206004820152601b60248201527a536166654d6174683a206164646974696f6e206f766572666c6f7760281b6044820152606401610407565b6001600160a01b0381168114611c9b57600080fd5b50565b600080600080600060808688031215611cb657600080fd5b85359450602086013593506040860135611ccf81611c86565b925060608601356001600160401b0380821115611ceb57600080fd5b818801915088601f830112611cff57600080fd5b813581811115611d0e57600080fd5b896020828501011115611d2057600080fd5b9699959850939650602001949392505050565b60005b83811015611d4e578181015183820152602001611d36565b83811115611d5d576000848401525b50505050565b6020815260008251806020840152611d82816040850160208701611d33565b601f01601f19169190910160400192915050565b60008060408385031215611da957600080fd5b8235611db481611c86565b946020939093013593505050565b6001600160a01b0391909116815260200190565b600080600060608486031215611deb57600080fd5b8335611df681611c86565b92506020840135611e0681611c86565b929592945050506040919091013590565b60008060408385031215611e2a57600080fd5b8235611e3581611c86565b91506020830135611e4581611c86565b809150509250929050565b600060208284031215611e6257600080fd5b813561165f81611c86565b600080600080600080600060e0888a031215611e8857600080fd5b8735611e9381611c86565b96506020880135611ea381611c86565b95506040880135945060608801359350608088013560ff81168114611ec757600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6020808252600e908201526d169bda5b9adcce881313d0d2d15160921b604082015260600190565b60018060a01b038616815284602082015283604082015260806060820152816080820152818360a0830137600081830160a090810191909152601f909201601f19160101949350505050565b600060208284031215611f6a57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082821015611f9957611f99611f71565b500390565b634e487b7160e01b600052601260045260246000fd5b600082611fc357611fc3611f9e565b500490565b600060018201611fda57611fda611f71565b5060010190565b60008251611ff3818460208701611d33565b9190910192915050565b60006020828403121561200f57600080fd5b8151801515811461165f57600080fd5b600081600019048311821515161561203957612039611f71565b500290565b60008261204d5761204d611f9e565b500690565b600063ffffffff8381169083168181101561206f5761206f611f71565b039392505050565b6000821982111561208a5761208a611f71565b500190565b6000602082840312156120a157600080fd5b815161165f81611c86565b60006001600160e01b03828116848216811515828404821116156120d2576120d2611f71565b02949350505050565b60006001600160e01b03838116806120f5576120f5611f9e565b9216919091049291505056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9a2646970667358221220b60f080b60e4f7c06a5b9e4bdf8a481bbd99bb6ced66077334c86d27fc50349764736f6c634300080f0033a2646970667358221220be91cd2aa0c418971f4b7d722920e347a03418e6cb58d09e4d7da75cfd15ce9664736f6c634300080f0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:737:43",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:43",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "151:289:43",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "161:27:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "181:6:43"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "175:5:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "175:13:43"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "165:6:43",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "197:10:43",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "206:1:43",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "201:1:43",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "268:77:43",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "293:3:43"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "298:1:43"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "289:3:43"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "289:11:43"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "316:6:43"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "324:1:43"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "312:3:43"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "312:14:43"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "328:4:43",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "308:3:43"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "308:25:43"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "302:5:43"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "302:32:43"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "282:6:43"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "282:53:43"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "282:53:43"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "227:1:43"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "230:6:43"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "224:2:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "224:13:43"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "238:21:43",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "240:17:43",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "249:1:43"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "252:4:43",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "245:3:43"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "245:12:43"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "240:1:43"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "220:3:43",
                    "statements": []
                  },
                  "src": "216:129:43"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "371:31:43",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "384:3:43"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "389:6:43"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "380:3:43"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "380:16:43"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "398:1:43",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "373:6:43"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "373:27:43"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "373:27:43"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "360:1:43"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "363:6:43"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "357:2:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "357:13:43"
                  },
                  "nodeType": "YulIf",
                  "src": "354:48:43"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "411:23:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "422:3:43"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "427:6:43"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "418:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "418:16:43"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "411:3:43"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "127:3:43",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "132:6:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "143:3:43",
                "type": ""
              }
            ],
            "src": "14:426:43"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "526:209:43",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "572:16:43",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "581:1:43",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "584:1:43",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "574:6:43"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "574:12:43"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "574:12:43"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "547:7:43"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "556:9:43"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "543:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "543:23:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "568:2:43",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "539:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "539:32:43"
                  },
                  "nodeType": "YulIf",
                  "src": "536:52:43"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "597:29:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "616:9:43"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "610:5:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "610:16:43"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "601:5:43",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "689:16:43",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "698:1:43",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "701:1:43",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "691:6:43"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "691:12:43"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "691:12:43"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "648:5:43"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:43"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "674:3:43",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "679:1:43",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "670:3:43"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "670:11:43"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "683:1:43",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "666:3:43"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "666:19:43"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "655:3:43"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "655:31:43"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "645:2:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "645:42:43"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "638:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "638:50:43"
                  },
                  "nodeType": "YulIf",
                  "src": "635:70:43"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "714:15:43",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "724:5:43"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "714:6:43"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "492:9:43",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "503:7:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "515:6:43",
                "type": ""
              }
            ],
            "src": "445:290:43"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        if gt(i, length) { mstore(add(pos, length), 0) }\n        end := add(pos, length)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
      "id": 43,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3719:43",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:43",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:102:43",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:43",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:43"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:43"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:43"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "182:6:43"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "198:3:43",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "203:1:43",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "194:3:43"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "194:11:43"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "207:1:43",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "190:3:43"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "190:19:43"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "178:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "178:32:43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:51:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:51:43"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:43",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:43",
                "type": ""
              }
            ],
            "src": "14:203:43"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "292:110:43",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "338:16:43",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "347:1:43",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "350:1:43",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "340:6:43"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "340:12:43"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "340:12:43"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "313:7:43"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "322:9:43"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "309:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "309:23:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "334:2:43",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "305:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "305:32:43"
                  },
                  "nodeType": "YulIf",
                  "src": "302:52:43"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "363:33:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "386:9:43"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "373:12:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "373:23:43"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "363:6:43"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "258:9:43",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "269:7:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "281:6:43",
                "type": ""
              }
            ],
            "src": "222:180:43"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "508:76:43",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "518:26:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "530:9:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "541:2:43",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "526:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "526:18:43"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "518:4:43"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "560:9:43"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "571:6:43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "553:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "553:25:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "553:25:43"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "477:9:43",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "488:6:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "499:4:43",
                "type": ""
              }
            ],
            "src": "407:177:43"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "690:76:43",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "700:26:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "712:9:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "723:2:43",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "708:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "708:18:43"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "700:4:43"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "742:9:43"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "753:6:43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "735:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "735:25:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "735:25:43"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "659:9:43",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "670:6:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "681:4:43",
                "type": ""
              }
            ],
            "src": "589:177:43"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "820:124:43",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "830:29:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "852:6:43"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "839:12:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "839:20:43"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "830:5:43"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "922:16:43",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "931:1:43",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "934:1:43",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "924:6:43"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "924:12:43"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "924:12:43"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "881:5:43"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "892:5:43"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "907:3:43",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "912:1:43",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "903:3:43"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "903:11:43"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "916:1:43",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "899:3:43"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "899:19:43"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "888:3:43"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "888:31:43"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "878:2:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "878:42:43"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "871:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "871:50:43"
                  },
                  "nodeType": "YulIf",
                  "src": "868:70:43"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "799:6:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "810:5:43",
                "type": ""
              }
            ],
            "src": "771:173:43"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1019:116:43",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1065:16:43",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1074:1:43",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1077:1:43",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1067:6:43"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1067:12:43"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1067:12:43"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1040:7:43"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1049:9:43"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1036:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1036:23:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1061:2:43",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1032:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1032:32:43"
                  },
                  "nodeType": "YulIf",
                  "src": "1029:52:43"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1090:39:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1119:9:43"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1100:18:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1100:29:43"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1090:6:43"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "985:9:43",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "996:7:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1008:6:43",
                "type": ""
              }
            ],
            "src": "949:186:43"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1227:173:43",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1273:16:43",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1282:1:43",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1285:1:43",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1275:6:43"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1275:12:43"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1275:12:43"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1248:7:43"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1257:9:43"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1244:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1244:23:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1269:2:43",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1240:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1240:32:43"
                  },
                  "nodeType": "YulIf",
                  "src": "1237:52:43"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1298:39:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1327:9:43"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1308:18:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1308:29:43"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1298:6:43"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1346:48:43",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1379:9:43"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1390:2:43",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1375:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1375:18:43"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1356:18:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1356:38:43"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1346:6:43"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1185:9:43",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1196:7:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1208:6:43",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1216:6:43",
                "type": ""
              }
            ],
            "src": "1140:260:43"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1579:167:43",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1596:9:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1607:2:43",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1589:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1589:21:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1589:21:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1630:9:43"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1641:2:43",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1626:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1626:18:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1646:2:43",
                        "type": "",
                        "value": "17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1619:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1619:30:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1619:30:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1669:9:43"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1680:2:43",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1665:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1665:18:43"
                      },
                      {
                        "hexValue": "5a6f696e6b733a20464f5242494444454e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1685:19:43",
                        "type": "",
                        "value": "Zoinks: FORBIDDEN"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1658:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1658:47:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1658:47:43"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1714:26:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1726:9:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1737:2:43",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1722:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1722:18:43"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1714:4:43"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3f2bfcaf1a7c394b0b2f965dd2ad6f9888a96d0c8f06e768d46669d687cb2366__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1556:9:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1570:4:43",
                "type": ""
              }
            ],
            "src": "1405:341:43"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1925:177:43",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1942:9:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1953:2:43",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1935:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1935:21:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1935:21:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1976:9:43"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1987:2:43",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1972:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1972:18:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1992:2:43",
                        "type": "",
                        "value": "27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1965:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1965:30:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1965:30:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2015:9:43"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2026:2:43",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2011:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2011:18:43"
                      },
                      {
                        "hexValue": "5a6f696e6b733a204944454e544943414c5f414444524553534553",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2031:29:43",
                        "type": "",
                        "value": "Zoinks: IDENTICAL_ADDRESSES"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2004:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2004:57:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2004:57:43"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2070:26:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2082:9:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2093:2:43",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2078:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2078:18:43"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2070:4:43"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5238147123d2c68833d38d2bd8ae5db832d0deb624fc239c5dc92e93135f3e89__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1902:9:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1916:4:43",
                "type": ""
              }
            ],
            "src": "1751:351:43"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2281:170:43",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2298:9:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2309:2:43",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2291:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2291:21:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2291:21:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2332:9:43"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2343:2:43",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2328:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2328:18:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2348:2:43",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2321:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2321:30:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2321:30:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2371:9:43"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2382:2:43",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2367:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2367:18:43"
                      },
                      {
                        "hexValue": "5a6f696e6b733a205a45524f5f41444452455353",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2387:22:43",
                        "type": "",
                        "value": "Zoinks: ZERO_ADDRESS"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2360:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2360:50:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2360:50:43"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2419:26:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2431:9:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2442:2:43",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2427:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2427:18:43"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2419:4:43"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7fe5548e2587029d60444714dd891d0c3873fea1eef52e684c1eb70e6448c9e0__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2258:9:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2272:4:43",
                "type": ""
              }
            ],
            "src": "2107:344:43"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2630:169:43",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2647:9:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2658:2:43",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2640:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2640:21:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2640:21:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2681:9:43"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2692:2:43",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2677:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2677:18:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2697:2:43",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2670:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2670:30:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2670:30:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2720:9:43"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2731:2:43",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2716:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2716:18:43"
                      },
                      {
                        "hexValue": "5a6f696e6b733a20504149525f455849535453",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2736:21:43",
                        "type": "",
                        "value": "Zoinks: PAIR_EXISTS"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2709:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2709:49:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2709:49:43"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2767:26:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2779:9:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2790:2:43",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2775:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2775:18:43"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2767:4:43"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5207c96e2391c20b9b4cf7996fee9f6befc581a8fea432c21e08996ffca11aa2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2607:9:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2621:4:43",
                "type": ""
              }
            ],
            "src": "2456:343:43"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2951:178:43",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2961:33:43",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2983:2:43",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2987:1:43",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "2979:3:43"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2979:10:43"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2991:1:43",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2975:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2975:18:43"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "2971:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2971:23:43"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2965:2:43",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3010:3:43"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3023:2:43",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "3027:6:43"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "3019:3:43"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3019:15:43"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3036:2:43"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3015:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3015:24:43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3003:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3003:37:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3003:37:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3060:3:43"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3065:2:43",
                            "type": "",
                            "value": "20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3056:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3056:12:43"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3078:2:43",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "3082:6:43"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "3074:3:43"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3074:15:43"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3091:2:43"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3070:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3070:24:43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3049:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3049:46:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3049:46:43"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3104:19:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3115:3:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3120:2:43",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3111:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3111:12:43"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3104:3:43"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2919:3:43",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2924:6:43",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2932:6:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2943:3:43",
                "type": ""
              }
            ],
            "src": "2804:325:43"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3263:175:43",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3273:26:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3285:9:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3296:2:43",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3281:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3281:18:43"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3273:4:43"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3308:29:43",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3326:3:43",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3331:1:43",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3322:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3322:11:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3335:1:43",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "3318:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3318:19:43"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3312:2:43",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3353:9:43"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3368:6:43"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3376:2:43"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3364:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3364:15:43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3346:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3346:34:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3346:34:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3400:9:43"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3411:2:43",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3396:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3396:18:43"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "3420:6:43"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3428:2:43"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3416:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3416:15:43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3389:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3389:43:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3389:43:43"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3224:9:43",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3235:6:43",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3243:6:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3254:4:43",
                "type": ""
              }
            ],
            "src": "3134:304:43"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3572:145:43",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3582:26:43",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3594:9:43"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3605:2:43",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3590:3:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3590:18:43"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3582:4:43"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3624:9:43"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3639:6:43"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3655:3:43",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3660:1:43",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3651:3:43"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3651:11:43"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3664:1:43",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3647:3:43"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3647:19:43"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3635:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3635:32:43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3617:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3617:51:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3617:51:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3688:9:43"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3699:2:43",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3684:3:43"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3684:18:43"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3704:6:43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3677:6:43"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3677:34:43"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3677:34:43"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3533:9:43",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3544:6:43",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3552:6:43",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3563:4:43",
                "type": ""
              }
            ],
            "src": "3443:274:43"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_3f2bfcaf1a7c394b0b2f965dd2ad6f9888a96d0c8f06e768d46669d687cb2366__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Zoinks: FORBIDDEN\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5238147123d2c68833d38d2bd8ae5db832d0deb624fc239c5dc92e93135f3e89__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Zoinks: IDENTICAL_ADDRESSES\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7fe5548e2587029d60444714dd891d0c3873fea1eef52e684c1eb70e6448c9e0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Zoinks: ZERO_ADDRESS\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5207c96e2391c20b9b4cf7996fee9f6befc581a8fea432c21e08996ffca11aa2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Zoinks: PAIR_EXISTS\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let _1 := not(sub(shl(96, 1), 1))\n        mstore(pos, and(shl(96, value0), _1))\n        mstore(add(pos, 20), and(shl(96, value1), _1))\n        end := add(pos, 40)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n}",
      "id": 43,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "295:1785:17:-:0;;;;;407:29;;;:::i;:::-;-1:-1:-1;;407:29:17;;;;;;;;;;;;;;;;390:47;;407:29;;390:47;;:::i;:::-;;;;;;;;;;;;;380:58;;;;;;343:95;;612:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;657:11;:26;;-1:-1:-1;;;;;;657:26:17;-1:-1:-1;;;;;657:26:17;;;;;;;;;;295:1785;;;;;;;;;;:::o;14:426:43:-;143:3;181:6;175:13;206:1;216:129;230:6;227:1;224:13;216:129;;;328:4;312:14;;;308:25;;302:32;289:11;;;282:53;245:12;216:129;;;363:6;360:1;357:13;354:48;;;398:1;389:6;384:3;380:16;373:27;354:48;-1:-1:-1;418:16:43;;;;;14:426;-1:-1:-1;;14:426:43:o;445:290::-;515:6;568:2;556:9;547:7;543:23;539:32;536:52;;;584:1;581;574:12;536:52;610:16;;-1:-1:-1;;;;;655:31:43;;645:42;;635:70;;701:1;698;691:12;635:70;724:5;445:290;-1:-1:-1;;;445:290:43:o;:::-;295:1785:17;;;;;;",
  "deployedSourceMap": "295:1785:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;447:20;;;;;-1:-1:-1;;;;;447:20:17;;;;;;-1:-1:-1;;;;;178:32:43;;;160:51;;148:2;133:18;447:20:17;;;;;;;;474:26;;;;;-1:-1:-1;;;;;474:26:17;;;578:25;;;;;;:::i;:::-;;:::i;699:96::-;772:8;:15;699:96;;;553:25:43;;;541:2;526:18;699:96:17;407:177:43;343:95:17;;;;;;1911:166;;;;;;:::i;:::-;;:::i;:::-;;803:950;;;;;;:::i;:::-;;:::i;509:62::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;509:62:17;;;1761:142;;;;;;:::i;:::-;;:::i;578:25::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;578:25:17;;-1:-1:-1;578:25:17;:::o;1911:166::-;1999:11;;-1:-1:-1;;;;;1999:11:17;1985:10;:25;1977:55;;;;-1:-1:-1;;;1977:55:17;;;;;;;:::i;:::-;;;;;;;;;2043:11;:26;;-1:-1:-1;;;;;;2043:26:17;-1:-1:-1;;;;;2043:26:17;;;;;;;;;;1911:166::o;803:950::-;873:12;916:6;-1:-1:-1;;;;;906:16:17;:6;-1:-1:-1;;;;;906:16:17;;898:56;;;;-1:-1:-1;;;898:56:17;;1953:2:43;898:56:17;;;1935:21:43;1992:2;1972:18;;;1965:30;-1:-1:-1;;;2011:18:43;;;2004:57;2078:18;;898:56:17;1751:351:43;898:56:17;966:14;982;1009:6;-1:-1:-1;;;;;1000:15:17;:6;-1:-1:-1;;;;;1000:15:17;;:53;;1038:6;1046;1000:53;;;1019:6;1027;1000:53;965:88;;-1:-1:-1;965:88:17;-1:-1:-1;;;;;;1072:20:17;;1064:53;;;;-1:-1:-1;;;1064:53:17;;2309:2:43;1064:53:17;;;2291:21:43;2348:2;2328:18;;;2321:30;-1:-1:-1;;;2367:18:43;;;2360:50;2427:18;;1064:53:17;2107:344:43;1064:53:17;-1:-1:-1;;;;;1136:15:17;;;1171:1;1136:15;;;:7;:15;;;;;;;;:23;;;;;;;;;;;;:37;1128:69;;;;-1:-1:-1;;;1128:69:17;;2658:2:43;1128:69:17;;;2640:21:43;2697:2;2677:18;;;2670:30;-1:-1:-1;;;2716:18:43;;;2709:49;2775:18;;1128:69:17;2456:343:43;1128:69:17;1238:21;1262:29;;;;;;;;:::i;:::-;-1:-1:-1;;1262:29:17;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2983:2:43;3019:15;;;3015:24;;1262:29:17;1327:32;;3003:37:43;3074:15;;;3070:24;3056:12;;;3049:46;1262:29:17;;-1:-1:-1;1302:12:17;;3111::43;;1327:32:17;;;;;;;;;;;;1317:43;;;;;;1302:58;;1450:4;1439:8;1433:15;1428:2;1418:8;1414:17;1411:1;1403:52;1476:44;;-1:-1:-1;;;1476:44:17;;-1:-1:-1;;;;;3364:15:43;;;1476:44:17;;;3346:34:43;3416:15;;;3396:18;;;3389:43;1395:60:17;;-1:-1:-1;1476:28:17;;;;;;3281:18:43;;1476:44:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;1531:15:17;;;;;;;:7;:15;;;;;;;;:23;;;;;;;;;;;;:30;;;;;-1:-1:-1;;;;;;1531:30:17;;;;;;;;1572:15;;;;;;:23;;;;;;;;:30;;;;;;;;1658:8;:19;;-1:-1:-1;1658:19:17;;;;;;;;;;;;;;;;;;;;;;1729:15;;1695:50;;3617:51:43;;;3684:18;;;3677:34;1695:50:17;;3590:18:43;1695:50:17;;;;;;;887:866;;;;803:950;;;;:::o;1761:142::-;1837:11;;-1:-1:-1;;;;;1837:11:17;1823:10;:25;1815:55;;;;-1:-1:-1;;;1815:55:17;;;;;;;:::i;:::-;1881:5;:14;;-1:-1:-1;;;;;;1881:14:17;-1:-1:-1;;;;;1881:14:17;;;;;;;;;;1761:142::o;-1:-1:-1:-;;;;;;;;:::o;222:180:43:-;281:6;334:2;322:9;313:7;309:23;305:32;302:52;;;350:1;347;340:12;302:52;-1:-1:-1;373:23:43;;222:180;-1:-1:-1;222:180:43:o;771:173::-;839:20;;-1:-1:-1;;;;;888:31:43;;878:42;;868:70;;934:1;931;924:12;868:70;771:173;;;:::o;949:186::-;1008:6;1061:2;1049:9;1040:7;1036:23;1032:32;1029:52;;;1077:1;1074;1067:12;1029:52;1100:29;1119:9;1100:29;:::i;:::-;1090:39;949:186;-1:-1:-1;;;949:186:43:o;1140:260::-;1208:6;1216;1269:2;1257:9;1248:7;1244:23;1240:32;1237:52;;;1285:1;1282;1275:12;1237:52;1308:29;1327:9;1308:29;:::i;:::-;1298:39;;1356:38;1390:2;1379:9;1375:18;1356:38;:::i;:::-;1346:48;;1140:260;;;;;:::o;1405:341::-;1607:2;1589:21;;;1646:2;1626:18;;;1619:30;-1:-1:-1;;;1680:2:43;1665:18;;1658:47;1737:2;1722:18;;1405:341::o",
  "source": "/************************************************************\r\n * \r\n * Autor: Zoinks\r\n *\r\n * 446576656c6f7065723a20416e746f6e20506f6c656e79616b61 ****/\r\n\r\n// SPDX-License-Identifier: UNLICENSED\r\npragma solidity 0.8.15;\r\n\r\nimport \"./interfaces/IZoinksFactory.sol\";\r\nimport \"./ZoinksPair.sol\";\r\n\r\ncontract ZoinksFactory is IZoinksFactory {\r\n    bytes32 public INIT_CODE_PAIR_HASH = keccak256(abi.encodePacked(type(ZoinksPair).creationCode));\r\n\r\n    address public feeTo;\r\n    address public feeToSetter;\r\n\r\n    mapping(address => mapping(address => address)) public getPair;\r\n    address[] public allPairs;\r\n\r\n    constructor(address _feeToSetter) {\r\n        feeToSetter = _feeToSetter;\r\n    }\r\n\r\n    function allPairsLength() external view returns (uint) {\r\n        return allPairs.length;\r\n    }\r\n\r\n    function createPair(address tokenA, address tokenB) external returns (address pair) {\r\n        require(tokenA != tokenB, 'Zoinks: IDENTICAL_ADDRESSES');\r\n        (address token0, address token1) = tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA);\r\n        require(token0 != address(0), 'Zoinks: ZERO_ADDRESS');\r\n        require(getPair[token0][token1] == address(0), 'Zoinks: PAIR_EXISTS'); // single check is sufficient\r\n        bytes memory bytecode = type(ZoinksPair).creationCode;\r\n        bytes32 salt = keccak256(abi.encodePacked(token0, token1));\r\n        assembly {\r\n            pair := create2(0, add(bytecode, 32), mload(bytecode), salt)\r\n        }\r\n        IZoinksPair(pair).initialize(token0, token1);\r\n        getPair[token0][token1] = pair;\r\n        getPair[token1][token0] = pair; // populate mapping in the reverse direction\r\n        allPairs.push(pair);\r\n\r\n        emit PairCreated(token0, token1, pair, allPairs.length);\r\n    }\r\n\r\n    function setFeeTo(address _feeTo) external {\r\n        require(msg.sender == feeToSetter, 'Zoinks: FORBIDDEN');\r\n        feeTo = _feeTo;\r\n    }\r\n\r\n    function setFeeToSetter(address _feeToSetter) external {\r\n        require(msg.sender == feeToSetter, 'Zoinks: FORBIDDEN');\r\n        feeToSetter = _feeToSetter;\r\n    }\r\n}",
  "sourcePath": "C:\\GitHub\\zoinks\\contracts\\Development\\src\\contracts\\ZoinksFactory.sol",
  "ast": {
    "absolutePath": "project:/src/contracts/ZoinksFactory.sol",
    "exportedSymbols": {
      "IERC20": [
        12428
      ],
      "IZoinksCallee": [
        12524
      ],
      "IZoinksERC20": [
        12642
      ],
      "IZoinksFactory": [
        12705
      ],
      "IZoinksPair": [
        12832
      ],
      "Math": [
        13249
      ],
      "SafeMath": [
        14047
      ],
      "UQ112x112": [
        14091
      ],
      "ZoinksERC20": [
        6996
      ],
      "ZoinksFactory": [
        7194
      ],
      "ZoinksPair": [
        8209
      ]
    },
    "id": 7195,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6998,
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ],
        "nodeType": "PragmaDirective",
        "src": "195:23:17"
      },
      {
        "absolutePath": "project:/src/contracts/interfaces/IZoinksFactory.sol",
        "file": "./interfaces/IZoinksFactory.sol",
        "id": 6999,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7195,
        "sourceUnit": 12706,
        "src": "222:41:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/src/contracts/ZoinksPair.sol",
        "file": "./ZoinksPair.sol",
        "id": 7000,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7195,
        "sourceUnit": 8210,
        "src": "265:26:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7001,
              "name": "IZoinksFactory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12705,
              "src": "321:14:17"
            },
            "id": 7002,
            "nodeType": "InheritanceSpecifier",
            "src": "321:14:17"
          }
        ],
        "canonicalName": "ZoinksFactory",
        "contractDependencies": [
          8209
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 7194,
        "linearizedBaseContracts": [
          7194,
          12705
        ],
        "name": "ZoinksFactory",
        "nameLocation": "304:13:17",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "5855a25a",
            "id": 7013,
            "mutability": "mutable",
            "name": "INIT_CODE_PAIR_HASH",
            "nameLocation": "358:19:17",
            "nodeType": "VariableDeclaration",
            "scope": 7194,
            "src": "343:95:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 7003,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "343:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 7008,
                            "name": "ZoinksPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8209,
                            "src": "412:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ZoinksPair_$8209_$",
                              "typeString": "type(contract ZoinksPair)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_contract$_ZoinksPair_$8209_$",
                              "typeString": "type(contract ZoinksPair)"
                            }
                          ],
                          "id": 7007,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967269,
                          "src": "407:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 7009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "407:16:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_contract$_ZoinksPair_$8209",
                          "typeString": "type(contract ZoinksPair)"
                        }
                      },
                      "id": 7010,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "creationCode",
                      "nodeType": "MemberAccess",
                      "src": "407:29:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    ],
                    "expression": {
                      "id": 7005,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967295,
                      "src": "390:3:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 7006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "encodePacked",
                    "nodeType": "MemberAccess",
                    "src": "390:16:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 7011,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "390:47:17",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 7004,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "380:9:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 7012,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "380:58:17",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              12659
            ],
            "constant": false,
            "functionSelector": "017e7e58",
            "id": 7015,
            "mutability": "mutable",
            "name": "feeTo",
            "nameLocation": "462:5:17",
            "nodeType": "VariableDeclaration",
            "scope": 7194,
            "src": "447:20:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7014,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "447:7:17",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              12664
            ],
            "constant": false,
            "functionSelector": "094b7415",
            "id": 7017,
            "mutability": "mutable",
            "name": "feeToSetter",
            "nameLocation": "489:11:17",
            "nodeType": "VariableDeclaration",
            "scope": 7194,
            "src": "474:26:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7016,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "474:7:17",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              12673
            ],
            "constant": false,
            "functionSelector": "e6a43905",
            "id": 7023,
            "mutability": "mutable",
            "name": "getPair",
            "nameLocation": "564:7:17",
            "nodeType": "VariableDeclaration",
            "scope": 7194,
            "src": "509:62:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
              "typeString": "mapping(address => mapping(address => address))"
            },
            "typeName": {
              "id": 7022,
              "keyType": {
                "id": 7018,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "517:7:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "509:47:17",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                "typeString": "mapping(address => mapping(address => address))"
              },
              "valueType": {
                "id": 7021,
                "keyType": {
                  "id": 7019,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "536:7:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "528:27:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                  "typeString": "mapping(address => address)"
                },
                "valueType": {
                  "id": 7020,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "547:7:17",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              12680
            ],
            "constant": false,
            "functionSelector": "1e3dd18b",
            "id": 7026,
            "mutability": "mutable",
            "name": "allPairs",
            "nameLocation": "595:8:17",
            "nodeType": "VariableDeclaration",
            "scope": 7194,
            "src": "578:25:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 7024,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "578:7:17",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 7025,
              "nodeType": "ArrayTypeName",
              "src": "578:9:17",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 7035,
              "nodeType": "Block",
              "src": "646:45:17",
              "statements": [
                {
                  "expression": {
                    "id": 7033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7031,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7017,
                      "src": "657:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7032,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7028,
                      "src": "671:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "657:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7034,
                  "nodeType": "ExpressionStatement",
                  "src": "657:26:17"
                }
              ]
            },
            "id": 7036,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7029,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7028,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "632:12:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 7036,
                  "src": "624:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7027,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "624:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "623:22:17"
            },
            "returnParameters": {
              "id": 7030,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "646:0:17"
            },
            "scope": 7194,
            "src": "612:79:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              12685
            ],
            "body": {
              "id": 7044,
              "nodeType": "Block",
              "src": "754:41:17",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 7041,
                      "name": "allPairs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7026,
                      "src": "772:8:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 7042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "772:15:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7040,
                  "id": 7043,
                  "nodeType": "Return",
                  "src": "765:22:17"
                }
              ]
            },
            "functionSelector": "574f2ba3",
            "id": 7045,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allPairsLength",
            "nameLocation": "708:14:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7037,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "722:2:17"
            },
            "returnParameters": {
              "id": 7040,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7039,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7045,
                  "src": "748:4:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7038,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "748:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "747:6:17"
            },
            "scope": 7194,
            "src": "699:96:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              12694
            ],
            "body": {
              "id": 7156,
              "nodeType": "Block",
              "src": "887:866:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7055,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7047,
                          "src": "906:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 7056,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7049,
                          "src": "916:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "906:16:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5a6f696e6b733a204944454e544943414c5f414444524553534553",
                        "id": 7058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "924:29:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5238147123d2c68833d38d2bd8ae5db832d0deb624fc239c5dc92e93135f3e89",
                          "typeString": "literal_string \"Zoinks: IDENTICAL_ADDRESSES\""
                        },
                        "value": "Zoinks: IDENTICAL_ADDRESSES"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5238147123d2c68833d38d2bd8ae5db832d0deb624fc239c5dc92e93135f3e89",
                          "typeString": "literal_string \"Zoinks: IDENTICAL_ADDRESSES\""
                        }
                      ],
                      "id": 7054,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "898:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "898:56:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7060,
                  "nodeType": "ExpressionStatement",
                  "src": "898:56:17"
                },
                {
                  "assignments": [
                    7062,
                    7064
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7062,
                      "mutability": "mutable",
                      "name": "token0",
                      "nameLocation": "974:6:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 7156,
                      "src": "966:14:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 7061,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "966:7:17",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 7064,
                      "mutability": "mutable",
                      "name": "token1",
                      "nameLocation": "990:6:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 7156,
                      "src": "982:14:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 7063,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "982:7:17",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7075,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 7067,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 7065,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7047,
                        "src": "1000:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 7066,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7049,
                        "src": "1009:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "1000:15:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "id": 7071,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7049,
                          "src": "1038:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 7072,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7047,
                          "src": "1046:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 7073,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1037:16:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "id": 7074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "1000:53:17",
                    "trueExpression": {
                      "components": [
                        {
                          "id": 7068,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7047,
                          "src": "1019:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 7069,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7049,
                          "src": "1027:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 7070,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1018:16:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                      "typeString": "tuple(address,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "965:88:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 7077,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7062,
                          "src": "1072:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 7080,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1090:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 7079,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1082:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 7078,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1082:7:17",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 7081,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1082:10:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1072:20:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5a6f696e6b733a205a45524f5f41444452455353",
                        "id": 7083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1094:22:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7fe5548e2587029d60444714dd891d0c3873fea1eef52e684c1eb70e6448c9e0",
                          "typeString": "literal_string \"Zoinks: ZERO_ADDRESS\""
                        },
                        "value": "Zoinks: ZERO_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7fe5548e2587029d60444714dd891d0c3873fea1eef52e684c1eb70e6448c9e0",
                          "typeString": "literal_string \"Zoinks: ZERO_ADDRESS\""
                        }
                      ],
                      "id": 7076,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1064:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1064:53:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7085,
                  "nodeType": "ExpressionStatement",
                  "src": "1064:53:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 7087,
                              "name": "getPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7023,
                              "src": "1136:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                "typeString": "mapping(address => mapping(address => address))"
                              }
                            },
                            "id": 7089,
                            "indexExpression": {
                              "id": 7088,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7062,
                              "src": "1144:6:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1136:15:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 7091,
                          "indexExpression": {
                            "id": 7090,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7064,
                            "src": "1152:6:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1136:23:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 7094,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1171:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 7093,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1163:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 7092,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1163:7:17",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 7095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1163:10:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1136:37:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5a6f696e6b733a20504149525f455849535453",
                        "id": 7097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1175:21:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5207c96e2391c20b9b4cf7996fee9f6befc581a8fea432c21e08996ffca11aa2",
                          "typeString": "literal_string \"Zoinks: PAIR_EXISTS\""
                        },
                        "value": "Zoinks: PAIR_EXISTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5207c96e2391c20b9b4cf7996fee9f6befc581a8fea432c21e08996ffca11aa2",
                          "typeString": "literal_string \"Zoinks: PAIR_EXISTS\""
                        }
                      ],
                      "id": 7086,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1128:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1128:69:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7099,
                  "nodeType": "ExpressionStatement",
                  "src": "1128:69:17"
                },
                {
                  "assignments": [
                    7101
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7101,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nameLocation": "1251:8:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 7156,
                      "src": "1238:21:17",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 7100,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1238:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7106,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 7103,
                          "name": "ZoinksPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8209,
                          "src": "1267:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ZoinksPair_$8209_$",
                            "typeString": "type(contract ZoinksPair)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_ZoinksPair_$8209_$",
                            "typeString": "type(contract ZoinksPair)"
                          }
                        ],
                        "id": 7102,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967269,
                        "src": "1262:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 7104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1262:16:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_ZoinksPair_$8209",
                        "typeString": "type(contract ZoinksPair)"
                      }
                    },
                    "id": 7105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "src": "1262:29:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1238:53:17"
                },
                {
                  "assignments": [
                    7108
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7108,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "1310:4:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 7156,
                      "src": "1302:12:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7107,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1302:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7116,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7112,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7062,
                            "src": "1344:6:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 7113,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7064,
                            "src": "1352:6:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 7110,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "1327:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 7111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1327:16:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 7114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1327:32:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7109,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "1317:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 7115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1317:43:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1302:58:17"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1380:86:17",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1395:60:17",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1411:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1418:8:17"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1428:2:17",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1414:3:17"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1414:17:17"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1439:8:17"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1433:5:17"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1433:15:17"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "1450:4:17"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "1403:7:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1403:52:17"
                        },
                        "variableNames": [
                          {
                            "name": "pair",
                            "nodeType": "YulIdentifier",
                            "src": "1395:4:17"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 7101,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1418:8:17",
                      "valueSize": 1
                    },
                    {
                      "declaration": 7101,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1439:8:17",
                      "valueSize": 1
                    },
                    {
                      "declaration": 7052,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1395:4:17",
                      "valueSize": 1
                    },
                    {
                      "declaration": 7108,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1450:4:17",
                      "valueSize": 1
                    }
                  ],
                  "id": 7117,
                  "nodeType": "InlineAssembly",
                  "src": "1371:95:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7122,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7062,
                        "src": "1505:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7123,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7064,
                        "src": "1513:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 7119,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7052,
                            "src": "1488:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7118,
                          "name": "IZoinksPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12832,
                          "src": "1476:11:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IZoinksPair_$12832_$",
                            "typeString": "type(contract IZoinksPair)"
                          }
                        },
                        "id": 7120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1476:17:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IZoinksPair_$12832",
                          "typeString": "contract IZoinksPair"
                        }
                      },
                      "id": 7121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12831,
                      "src": "1476:28:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 7124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1476:44:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7125,
                  "nodeType": "ExpressionStatement",
                  "src": "1476:44:17"
                },
                {
                  "expression": {
                    "id": 7132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 7126,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7023,
                          "src": "1531:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 7129,
                        "indexExpression": {
                          "id": 7127,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7062,
                          "src": "1539:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1531:15:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 7130,
                      "indexExpression": {
                        "id": 7128,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7064,
                        "src": "1547:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1531:23:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7131,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7052,
                      "src": "1557:4:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1531:30:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7133,
                  "nodeType": "ExpressionStatement",
                  "src": "1531:30:17"
                },
                {
                  "expression": {
                    "id": 7140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 7134,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7023,
                          "src": "1572:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 7137,
                        "indexExpression": {
                          "id": 7135,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7064,
                          "src": "1580:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1572:15:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 7138,
                      "indexExpression": {
                        "id": 7136,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7062,
                        "src": "1588:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1572:23:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7139,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7052,
                      "src": "1598:4:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1572:30:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7141,
                  "nodeType": "ExpressionStatement",
                  "src": "1572:30:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7145,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7052,
                        "src": "1672:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 7142,
                        "name": "allPairs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7026,
                        "src": "1658:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 7144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1658:13:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 7146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1658:19:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7147,
                  "nodeType": "ExpressionStatement",
                  "src": "1658:19:17"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 7149,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7062,
                        "src": "1707:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7150,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7064,
                        "src": "1715:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7151,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7052,
                        "src": "1723:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 7152,
                          "name": "allPairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7026,
                          "src": "1729:8:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 7153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1729:15:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7148,
                      "name": "PairCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12654,
                      "src": "1695:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 7154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1695:50:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7155,
                  "nodeType": "EmitStatement",
                  "src": "1690:55:17"
                }
              ]
            },
            "functionSelector": "c9c65396",
            "id": 7157,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPair",
            "nameLocation": "812:10:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7050,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7047,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "831:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 7157,
                  "src": "823:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7046,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "823:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7049,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "847:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 7157,
                  "src": "839:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7048,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "839:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "822:32:17"
            },
            "returnParameters": {
              "id": 7053,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7052,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "881:4:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 7157,
                  "src": "873:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7051,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "873:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "872:14:17"
            },
            "scope": 7194,
            "src": "803:950:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              12699
            ],
            "body": {
              "id": 7174,
              "nodeType": "Block",
              "src": "1804:99:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 7163,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1823:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 7164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1823:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 7165,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7017,
                          "src": "1837:11:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1823:25:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5a6f696e6b733a20464f5242494444454e",
                        "id": 7167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1850:19:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3f2bfcaf1a7c394b0b2f965dd2ad6f9888a96d0c8f06e768d46669d687cb2366",
                          "typeString": "literal_string \"Zoinks: FORBIDDEN\""
                        },
                        "value": "Zoinks: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3f2bfcaf1a7c394b0b2f965dd2ad6f9888a96d0c8f06e768d46669d687cb2366",
                          "typeString": "literal_string \"Zoinks: FORBIDDEN\""
                        }
                      ],
                      "id": 7162,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1815:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1815:55:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7169,
                  "nodeType": "ExpressionStatement",
                  "src": "1815:55:17"
                },
                {
                  "expression": {
                    "id": 7172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7170,
                      "name": "feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7015,
                      "src": "1881:5:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7171,
                      "name": "_feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7159,
                      "src": "1889:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1881:14:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7173,
                  "nodeType": "ExpressionStatement",
                  "src": "1881:14:17"
                }
              ]
            },
            "functionSelector": "f46901ed",
            "id": 7175,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeTo",
            "nameLocation": "1770:8:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7159,
                  "mutability": "mutable",
                  "name": "_feeTo",
                  "nameLocation": "1787:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 7175,
                  "src": "1779:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7158,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1779:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1778:16:17"
            },
            "returnParameters": {
              "id": 7161,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1804:0:17"
            },
            "scope": 7194,
            "src": "1761:142:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              12704
            ],
            "body": {
              "id": 7192,
              "nodeType": "Block",
              "src": "1966:111:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 7181,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1985:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 7182,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1985:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 7183,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7017,
                          "src": "1999:11:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1985:25:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5a6f696e6b733a20464f5242494444454e",
                        "id": 7185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2012:19:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3f2bfcaf1a7c394b0b2f965dd2ad6f9888a96d0c8f06e768d46669d687cb2366",
                          "typeString": "literal_string \"Zoinks: FORBIDDEN\""
                        },
                        "value": "Zoinks: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3f2bfcaf1a7c394b0b2f965dd2ad6f9888a96d0c8f06e768d46669d687cb2366",
                          "typeString": "literal_string \"Zoinks: FORBIDDEN\""
                        }
                      ],
                      "id": 7180,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1977:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1977:55:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7187,
                  "nodeType": "ExpressionStatement",
                  "src": "1977:55:17"
                },
                {
                  "expression": {
                    "id": 7190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7188,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7017,
                      "src": "2043:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7189,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7177,
                      "src": "2057:12:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2043:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7191,
                  "nodeType": "ExpressionStatement",
                  "src": "2043:26:17"
                }
              ]
            },
            "functionSelector": "a2e74af6",
            "id": 7193,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeToSetter",
            "nameLocation": "1920:14:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7178,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7177,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "1943:12:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 7193,
                  "src": "1935:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7176,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1935:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1934:22:17"
            },
            "returnParameters": {
              "id": 7179,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1966:0:17"
            },
            "scope": 7194,
            "src": "1911:166:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 7195,
        "src": "295:1785:17",
        "usedErrors": []
      }
    ],
    "src": "195:1885:17"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.15+commit.e14f2714.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xFA71b759F091cd62036657853C820490970f5792",
      "transactionHash": "0x964eb2e35a106138eb6da8051ddbc2baf92e461121370ab410e6c8eac63cba0b"
    }
  },
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-07-30T21:33:07.280Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}